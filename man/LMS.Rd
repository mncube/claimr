% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/minimum_sum_method.R
\name{LMS}
\alias{LMS}
\title{Least Minimum Sum}
\usage{
LMS(df_samp, df_frame, var, sub_var, flag, Npop, nsamp, ne, alpha = 0.1)
}
\arguments{
\item{df_samp}{Sample (must have var, flag, and sub_var)}

\item{df_frame}{sampling frame (must have sub_var variable to match with df_samp)}

\item{var}{Independent variable in LMS calculation}

\item{sub_var}{Variable used to match sample records (df_samp) and sampling frame records (df_frame)}

\item{flag}{Variable that flags observations with errors.}

\item{Npop}{"Number of payments (e.g. on Medicare claims) in the universe/population"}

\item{nsamp}{"Number of payments (e.g. on Medicare claims) in...simple random sample"}

\item{ne}{"The number...of sample payments which are completely in error (Or, for partial overpayment scenarios, seriously in errorâ€”see Section 4.2.)"}

\item{alpha}{alpha-level for "1-alpha confidence bound"}
}
\value{
LMS nested list returning a list of numbers and a list of data_frames
}
\description{
"LMS = {sum of the ne sample overpayments} + {sum of the smallest LNE - ne nonsampled population payments}"
}
\details{
Citation: Edwards, D., Ward-Besser, G., Lasecki, J., Parker, B., Wu, F. & Moorhead, P. (2003).  The Minimum Sum Method: A Distribution-Free Sampling Procedure for Medicare Fraud Investigations.  Heath Services & Outcomes Research Methodology 4: 241-263.
}
\examples{
#Generate sampling frame  with an index id from 1 to N
df_sample_frame_num <- data.frame("sample_frame_sequence_id" = 1:1000,
                                 "score" = rnorm(1000, 75, 10))

#Get output and input in lists
score_audit_num <- rs_singlestage(df = df_sample_frame_num,
                                  audit_review = "Score Audit",
                                  quantity_to_generate = 100,
                                  quantity_of_spares = 3,
                                  frame_low = 1,
                                  frame_high = 1000)

score_samp <- score_audit_num$output$sample
score_samp$audit_results <- sample(0:1, 100, replace = TRUE)

score_frame <- score_audit_num$output$sample_frame

LMS_out <- LMS(score_samp, score_frame, var = score, sub_var = sample_frame_sequence_id,
               flag = audit_results,
               Npop = 1000, nsamp = 100, ne = 100)

#Get LMS estimate
LMS_out$numbers$LMS

}
